# Generated by Django 4.0.5 on 2022-08-21 17:24

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'Admin'), (2, 'doctor_profile'), (3, 'patient_profile')], default=1, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='doctor_profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_images', models.ImageField(upload_to='images/')),
                ('username', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('Gender', models.BooleanField(default=True)),
                ('Date_of_Birth', models.DateField(max_length=20)),
                ('Biography', models.CharField(max_length=500)),
                ('clinic_name', models.CharField(max_length=40)),
                ('clinic_address', models.CharField(max_length=100)),
                ('clinic_images', models.ImageField(upload_to='images/')),
                ('Address_line1', models.CharField(max_length=200)),
                ('Address_line2', models.CharField(max_length=100)),
                ('City', models.CharField(max_length=30)),
                ('State_Provice', models.CharField(max_length=30)),
                ('Country', models.CharField(max_length=30)),
                ('Postal_code', models.IntegerField()),
                ('Pricing', models.BooleanField(default=True)),
                ('Services', models.CharField(max_length=30)),
                ('Specialiazation', models.CharField(max_length=30)),
                ('Degree', models.CharField(max_length=30)),
                ('College_Institute', models.CharField(max_length=100)),
                ('Year_of_Completion', models.DateField(max_length=20)),
                ('Hospital_Name', models.CharField(max_length=50)),
                ('From', models.DateField(max_length=20)),
                ('To', models.DateField(max_length=20)),
                ('Designation', models.CharField(max_length=50)),
                ('Awards', models.CharField(max_length=30)),
                ('Year', models.DateField(max_length=20)),
                ('Memberships', models.CharField(max_length=50)),
                ('Registrations', models.CharField(max_length=50)),
                ('Year_of_Registeration', models.DateField(max_length=20)),
                ('consultation_fees', models.IntegerField()),
                ('doctor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='patient_profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_images', models.ImageField(upload_to='images/')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('Date_of_Birth', models.DateField(max_length=20)),
                ('Blood_Group', models.CharField(max_length=5)),
                ('email', models.EmailField(max_length=50)),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('Address', models.CharField(max_length=200)),
                ('City', models.CharField(max_length=30)),
                ('State', models.CharField(max_length=30)),
                ('zip_code', models.IntegerField()),
                ('Country', models.CharField(max_length=30)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='social_media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Facebook_url', models.CharField(max_length=100)),
                ('Instagram_url', models.CharField(max_length=100)),
                ('Twitter_url', models.CharField(max_length=100)),
                ('Pinterest_url', models.CharField(max_length=100)),
                ('Linkedin_url', models.CharField(max_length=100)),
                ('Youtube_url', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speciality', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('recomend', models.CharField(default='recommend', max_length=10)),
                ('title', models.CharField(max_length=32)),
                ('description', models.TextField(max_length=360)),
                ('doctorratingid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.doctor_profile')),
                ('patientratingid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.patient_profile')),
            ],
        ),
        migrations.CreateModel(
            name='doctor_timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_from_time', models.TimeField(max_length=20)),
                ('doctor_to_time', models.TimeField(max_length=20)),
                ('doctor_date', models.DateField(max_length=10)),
                ('timetable_doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable_doctor_id', to='website.doctor_profile')),
            ],
        ),
        migrations.CreateModel(
            name='doctor_reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply', models.CharField(max_length=20)),
                ('doctor_reply_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.doctor_profile')),
                ('reviews', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.rating')),
            ],
        ),
        migrations.CreateModel(
            name='appointment_booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_time', models.TimeField(max_length=20)),
                ('to_time', models.TimeField(max_length=20)),
                ('date', models.DateField(max_length=10)),
                ('Payment_card', models.CharField(max_length=50)),
                ('card_number', models.IntegerField()),
                ('expire_month', models.IntegerField()),
                ('expire_year', models.IntegerField()),
                ('Cvv', models.IntegerField()),
                ('amount_paid', models.IntegerField()),
                ('status', models.CharField(default='pending', max_length=15)),
                ('appointment_doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_doctor_id', to='website.doctor_profile')),
                ('appointment_patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_patient_id', to='website.patient_profile')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
